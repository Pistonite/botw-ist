version: '3'

tasks:
  check:
    desc: Check for errors
    cmds:
      - go vet
      - mkdir -p build
      - gofmt -l . > build/fmt.txt
      - cmd: if ! [ -z $(cat build/fmt.txt) ]; then echo 'Run `go fmt` to format the following files:'; cat build/fmt.txt; exit 1; fi
        silent: true

  fix:
    desc: Fix errors
    cmds:
      - go fmt

  build:
    desc: Build the server executable
    cmds:
      - mkdir -p build
      - go build -o build/botw-iss

  dev:
    desc: Run the server in watch mode
    env:
      ISS_LOG: info
      ISS_LOG_COLOR: "false"
      ISS_ADDRESS: https://pistonite.local:8000
      ISS_CERT: ../cert
      ISS_MANUAL_PATH: ../manual/book
      ISS_LEGACY_PATH: ../legacy/dist
      ISS_DEV: 1
    cmds:
      - cargo watch -C . -s 'go run .'

  ######################################
  # Container Local Testing
  ######################################

  pull:
    desc: Pull the latest build artifact from GitHub
    dotenv:
      - .env
    cmds:
      - magnesis -o dist

  container:
    desc: Build the Docker container
    cmds:
      - docker build -t pistonite/botw-iss .

  run:
    desc: Run the Docker container
    cmds:
      - docker run -p 8000:80 -e ISS_ADDRESS=http://pistonite.local:80 pistonite/botw-iss:latest

  connect:
    desc: Connect to the running Docker container
    cmds:
      - docker exec -it $(docker container ls -q --filter ancestor=pistonite/botw-iss) /bin/sh

  stop:
    desc: Stop the running Docker container
    cmds:
      - docker stop $(docker ps ls -q -a --filter ancestor=pistonite/botw-iss)

  clean:
    desc: Clean the containers
    cmds:
      - docker container prune
      - docker image rm $(docker image ls -q -a --filter reference=pistonite/botw-iss)


