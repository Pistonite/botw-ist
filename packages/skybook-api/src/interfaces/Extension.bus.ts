/*
 * This file is generated by the workex CLI Tool
 *
 * Please visit https://workex.pistonite.dev for more information
 */

import type { WxProtocolBindConfig } from "@pistonite/workex";
import type { Extension } from "../Extension.ts";
import type { ExtensionApp } from "../ExtensionApp.ts";
import { _wxRecverImpl } from "./ExtensionApp.ts";
import { _wxSenderImpl } from "./Extension.ts";

/**
 * Create a bind config for the Extension interface, under the `skyb-api-0.0.1` protocol
 *
 * When used with a creator function in Workex, an implementation of Extension will be returned
 * to send remote calls to the other side. This side needs to provide an implementation for ExtensionApp
 * to be used when the other side calls this side
 *
 * This function is generated by the workex CLI tool
 */
export const skybookExtension = (handler: ExtensionApp, resolve?: (_: Extension) => (void | Promise<void>)): WxProtocolBindConfig<Extension> => { return {
    protocol: "skyb-api-0.0.1",
    interfaces: ["Extension", "ExtensionApp"],
    recvHandler: _wxRecverImpl(handler),
    bindSend: (sender) => {
        const impl = new _wxSenderImpl(sender);
        resolve?.(impl);
        return impl;
    },
}};