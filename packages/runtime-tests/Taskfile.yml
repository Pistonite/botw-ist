version: '3'

includes:
  cargo:
    taskfile: ../mono-dev/task/cargo.yaml
    internal: true

tasks:
  install:
    desc: Install extra tools for working with BlueFlame images
    cmds:
      - cargo install uking-relocate --git https://github.com/Pistonight/symbotw --branch main

  clean:
    desc: Remove files
    cmds:
      - rm -rf failures data
      - rm -f trace.txt

  check:
    cmds:
      - task: cargo:clippy-all
      - task: cargo:fmt-check

  fix:
    cmds:
      - task: cargo:fmt-fix

  update-script-tests:
    desc: Refresh script test snapshots
    aliases: [ust]
    env:
      SKYBOOK_RUNTIME_TEST_REFRESH: true
      SKYBOOK_RUNTIME_TEST_IMAGE: ./data/program-full.bfi
      RUST_BACKTRACE: 1
      RUST_LOG: info
    cmds:
      - cargo run --release

  update-trace-hash:
    desc: Run tests and update the trace hash file
    env:
      SKYBOOK_RUNTIME_TEST_REFRESH_HASH: true
      SKYBOOK_RUNTIME_TEST_IMAGE: ./data/program-full.bfi
      RUST_BACKTRACE: 1
      RUST_LOG: info
    cmds:
      - cargo run --release

  run-full:
    desc: Run the tests with the full image
    env:
      SKYBOOK_RUNTIME_TEST_IMAGE: ./data/program-full.bfi
      RUST_BACKTRACE: 1
      RUST_LOG: info
    cmds:
      - cargo run --release

  run-full-debug:
    desc: Run the tests with the full image and trace
    env:
      SKYBOOK_RUNTIME_TEST_IMAGE: ./data/program-full.bfi
      RUST_BACKTRACE: 1
      RUST_LOG: debug
    cmds:
      - cargo run --release

  run-full-trace:
    desc: Run the tests with the full image and trace
    env:
      SKYBOOK_RUNTIME_TEST_IMAGE: ./data/program-full.bfi
      RUST_BACKTRACE: 1
      RUST_LOG: trace
    cmds:
      - cargo run --release

  run-mini:
    desc: Run the tests with the mini image
    env:
      SKYBOOK_RUNTIME_TEST_IMAGE: ./data/program-mini.bfi
      RUST_BACKTRACE: 1
      RUST_LOG: info
    cmds:
      - cargo run --release

  diff:
    desc: Diff script test snapshots
    cmds:
      - delta snapshots/{{.CLI_ARGS}}.snap.rs snapshots/wip/{{.CLI_ARGS}}.snap.rs --side-by-side

  pull-deps:
    desc: Download super secret files
    cmds:
      - $(which mkdir) -p data
      - gcloud storage cp -r gs://ist-private/super-secret/botw150 data

  build-full:
    desc: Build the image that contains the full ExeFS
    cmds:
      - uking-relocate data/botw150/sdk.elf -s 0x1042000000 -o data/program-full.bfi
    sources:
      - data/botw150/main.elf
    generates:
      - data/program-full.bfi

  build-mini:
    desc: Build the image that only contains the needed parts
    cmds:
      - task: build-full
      - task: update-trace-hash
      - python scripts/relocate.py
      - task: run-mini
      - sha256sum data/program-mini.bfi > hash.txt

  push-artifacts:
    desc: Upload built artifacts
    cmds:
      - gcloud storage cp data/program-mini.bfi gs://ist-private/super-secret/images/

  pull-artifacts:
    desc: Pull built artifacts
    cmds:
      - $(which mkdir) -p data
      - gcloud storage cp gs://ist-private/super-secret/images/program-mini.bfi data

  verify-artifacts:
    cmds:
      - sha256sum --check hash.txt
